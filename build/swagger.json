{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"customErrorCode": {
				"type": "string",
				"enum": [
					"SERVER_ERROR",
					"UNAUTHORIZED",
					"FORBIDDEN",
					"NOT_FOUND",
					"VALIDATION_ERROR",
					"EXCEL_ERROR",
					"AWS_ERROR",
					"BAD_REQUEST",
					"TOO_MANY_REQUESTS",
					"CONFLICT"
				],
				"nullable": false
			},
			"ClientErrorInterface": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"code": {
						"$ref": "#/components/schemas/customErrorCode"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"code",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorDetail": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"properties": {
							"details": {},
							"message": {
								"type": "string"
							},
							"code": {
								"type": "string"
							}
						},
						"required": [
							"message"
						],
						"type": "object"
					}
				],
				"description": "ErrorDetail - flexible error payload used across controllers/services.\n- a simple string\n- or a structured object { code, message, details? }\n\nExported here so TSOA only sees one model definition."
			},
			"ErrorResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"error": {
						"$ref": "#/components/schemas/ErrorDetail"
					},
					"timestamp": {
						"type": "string"
					},
					"developer": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse__isNewUser-boolean--otp-string__": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"otp": {
								"type": "string"
							},
							"isNewUser": {
								"type": "boolean"
							}
						},
						"required": [
							"otp",
							"isNewUser"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISendOtpInput": {
				"description": "Send OTP request input",
				"properties": {
					"phone": {
						"type": "string"
					}
				},
				"required": [
					"phone"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthTokens": {
				"description": "Authentication tokens returned after successful authentication",
				"properties": {
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					},
					"expiresIn": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"accessToken",
					"refreshToken",
					"expiresIn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAuthResponse": {
				"description": "Mobile authentication response",
				"properties": {
					"user": {
						"properties": {
							"updatedAt": {
								"type": "string"
							},
							"createdAt": {
								"type": "string"
							},
							"isNewUser": {
								"type": "boolean"
							},
							"isPhoneVerified": {
								"type": "boolean"
							},
							"email": {
								"type": "string"
							},
							"phone": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"updatedAt",
							"createdAt",
							"isNewUser",
							"isPhoneVerified",
							"phone",
							"name",
							"id"
						],
						"type": "object"
					},
					"tokens": {
						"$ref": "#/components/schemas/AuthTokens"
					}
				},
				"required": [
					"user",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_IAuthResponse_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/IAuthResponse"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerifyOtpInput": {
				"description": "Verify OTP request input",
				"properties": {
					"phone": {
						"type": "string"
					},
					"otp": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"deviceId": {
						"type": "string"
					}
				},
				"required": [
					"phone",
					"otp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse__otp-string__": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"otp": {
								"type": "string"
							}
						},
						"required": [
							"otp"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MobileCategoryResponse": {
				"properties": {
					"categories": {
						"items": {
							"properties": {
								"deepLink": {
									"type": "string",
									"nullable": true
								},
								"textColor": {
									"type": "string"
								},
								"backgroundColor": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"icon": {
									"type": "string",
									"nullable": true
								},
								"image": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"deepLink",
								"textColor",
								"backgroundColor",
								"slug",
								"icon",
								"image",
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					},
					"pagination": {
						"properties": {
							"hasMore": {
								"type": "boolean"
							},
							"page": {
								"type": "number",
								"format": "double"
							},
							"pages": {
								"type": "number",
								"format": "double"
							},
							"total": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"hasMore",
							"page",
							"pages",
							"total"
						],
						"type": "object"
					}
				},
				"required": [
					"categories",
					"pagination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_MobileCategoryResponse_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/MobileCategoryResponse"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryTreeResponse": {
				"properties": {
					"categoryTree": {
						"items": {
							"properties": {
								"children": {
									"items": {},
									"type": "array"
								},
								"slug": {
									"type": "string"
								},
								"icon": {
									"type": "string",
									"nullable": true
								},
								"image": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"children",
								"slug",
								"icon",
								"image",
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"categoryTree"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_CategoryTreeResponse_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/CategoryTreeResponse"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeaturedCategoriesResponse": {
				"properties": {
					"featuredCategories": {
						"items": {
							"properties": {
								"textColor": {
									"type": "string"
								},
								"backgroundColor": {
									"type": "string"
								},
								"deepLink": {
									"type": "string"
								},
								"image": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"textColor",
								"backgroundColor",
								"deepLink",
								"image",
								"name",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"featuredCategories"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_FeaturedCategoriesResponse_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/FeaturedCategoriesResponse"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserProfile": {
				"description": "The shape of the user profile data that is safe to return to clients.\nPassword and sensitive data are omitted.",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"roles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"isEmailVerified": {
						"type": "boolean"
					},
					"isPhoneVerified": {
						"type": "boolean"
					},
					"lastLogin": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"roles",
					"isActive",
					"isEmailVerified",
					"isPhoneVerified",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiSuccessResponse_UserProfile_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/UserProfile"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiSuccessResponse____": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {},
						"type": "object"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiSuccessResponse_any-Array_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiSuccessResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiSuccessResponse__success-boolean__": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductResponseDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"inStock": {
						"type": "boolean"
					},
					"user": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"price",
					"images",
					"isActive",
					"inStock",
					"user",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_ProductResponseDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/ProductResponseDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateProductDTO_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"compareAtPrice": {
						"type": "number",
						"format": "double"
					},
					"categoryId": {
						"type": "string"
					},
					"sku": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					},
					"brand": {
						"type": "string"
					},
					"unit": {
						"type": "string",
						"enum": [
							"piece",
							"kg",
							"gm",
							"litre",
							"ml",
							"pack",
							"dozen"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UpdateProductDTO": {
				"$ref": "#/components/schemas/Partial_CreateProductDTO_"
			},
			"PaginatedProductsResponseDTO": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/ProductResponseDTO"
						},
						"type": "array"
					},
					"pagination": {
						"properties": {
							"hasPrevPage": {
								"type": "boolean"
							},
							"hasNextPage": {
								"type": "boolean"
							},
							"limit": {
								"type": "number",
								"format": "double"
							},
							"currentPage": {
								"type": "number",
								"format": "double"
							},
							"totalPages": {
								"type": "number",
								"format": "double"
							},
							"totalDocs": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"hasPrevPage",
							"hasNextPage",
							"limit",
							"currentPage",
							"totalPages",
							"totalDocs"
						],
						"type": "object"
					}
				},
				"required": [
					"products",
					"pagination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_PaginatedProductsResponseDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/PaginatedProductsResponseDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_null_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NullSuccessResponse": {
				"$ref": "#/components/schemas/SuccessResponse_null_"
			},
			"CategoryDTO": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_CategoryDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/CategoryDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginatedCategoriesDTO": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_PaginatedCategoriesDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/PaginatedCategoriesDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryTreeItem": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"children": {
						"items": {
							"$ref": "#/components/schemas/CategoryTreeItem"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"children"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse__tree-CategoryTreeItem-Array__": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"tree": {
								"items": {
									"$ref": "#/components/schemas/CategoryTreeItem"
								},
								"type": "array"
							}
						},
						"required": [
							"tree"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "milqit-ecom-backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/mobile/auth/send-otp": {
			"post": {
				"operationId": "SendOtp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse__isNewUser-boolean--otp-string__"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISendOtpInput"
							}
						}
					}
				}
			}
		},
		"/mobile/auth/verify-otp": {
			"post": {
				"operationId": "VerifyOtp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_IAuthResponse_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerifyOtpInput"
							}
						}
					}
				}
			}
		},
		"/mobile/auth/resend-otp": {
			"post": {
				"operationId": "ResendOtp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse__otp-string__"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISendOtpInput"
							}
						}
					}
				}
			}
		},
		"/mobile/categories": {
			"get": {
				"operationId": "ListCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_MobileCategoryResponse_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/mobile/categories/tree": {
			"get": {
				"operationId": "GetCategoryTree",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_CategoryTreeResponse_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": []
			}
		},
		"/mobile/categories/featured": {
			"get": {
				"operationId": "GetFeaturedCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_FeaturedCategoriesResponse_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "NOT_FOUND",
											"status": 404,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get featured categories for mobile app",
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": []
			}
		},
		"/mobile/user/{userId}/profile": {
			"get": {
				"operationId": "GetUserProfile",
				"responses": {
					"200": {
						"description": "User Profile Retrieved",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse_UserProfile_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Get the current user's profile based on their authentication token.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateProfile",
				"responses": {
					"200": {
						"description": "Profile Updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse____"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Update the current user's profile.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/mobile/user/{userId}/addresses": {
			"get": {
				"operationId": "GetAddresses",
				"responses": {
					"200": {
						"description": "Addresses Retrieved",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse_any-Array_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Get all saved addresses for the current user.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "AddAddress",
				"responses": {
					"201": {
						"description": "Address Added",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse_any_"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Add a new delivery address for the current user.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"delete": {
				"operationId": "RemoveAddress",
				"responses": {
					"200": {
						"description": "Address Removed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse__success-boolean__"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Delete a saved address for the current user.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"addressId": {
										"type": "string"
									}
								},
								"required": [
									"addressId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/mobile/user/{userId}/addresses/primary": {
			"put": {
				"operationId": "SetPrimaryAddress",
				"responses": {
					"200": {
						"description": "Primary Address Set",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiSuccessResponse__success-boolean__"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					}
				},
				"description": "Set a primary delivery address from the user's saved addresses.",
				"tags": [
					"Mobile User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"addressId": {
										"type": "string"
									}
								},
								"required": [
									"addressId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/admin/products": {
			"post": {
				"operationId": "CreateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Create a new product with file uploads.\nNote: When uploading files, data must be sent as form fields.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"price": {
										"type": "string"
									},
									"categoryId": {
										"type": "string"
									},
									"sku": {
										"type": "string"
									},
									"quantity": {
										"type": "string"
									},
									"unit": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"brand": {
										"type": "string"
									},
									"isActive": {
										"type": "string"
									},
									"images": {
										"items": {
											"type": "string",
											"format": "binary"
										},
										"type": "array"
									}
								},
								"required": [
									"name",
									"price",
									"categoryId",
									"sku",
									"quantity",
									"unit"
								]
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_PaginatedProductsResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get a paginated list of products.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/admin/products/{id}": {
			"put": {
				"operationId": "UpdateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProductDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get a single product by its ID.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NullSuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Delete a product by its ID.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories": {
			"post": {
				"operationId": "CreateCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_CategoryDTO_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			},
			"get": {
				"operationId": "ListCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_PaginatedCategoriesDTO_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"default": "displayOrder",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"default": "asc",
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories/{id}": {
			"get": {
				"operationId": "GetCategoryById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_CategoryDTO_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_CategoryDTO_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteCategory",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories/tree": {
			"get": {
				"operationId": "GetCategoryTree",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse__tree-CategoryTreeItem-Array__"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/categories/reorder": {
			"put": {
				"operationId": "ReorderCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_null_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "VALIDATION_ERROR",
											"status": 422,
											"message": "string"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClientErrorInterface"
								},
								"examples": {
									"Example 1": {
										"value": {
											"success": false,
											"code": "SERVER_ERROR",
											"status": 500,
											"message": "string"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Admin - Categories"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"categories": {
										"items": {
											"properties": {
												"displayOrder": {
													"type": "number",
													"format": "double"
												},
												"id": {
													"type": "string"
												}
											},
											"required": [
												"displayOrder",
												"id"
											],
											"type": "object"
										},
										"type": "array"
									}
								},
								"required": [
									"categories"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3000/v1"
		}
	]
}