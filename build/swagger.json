{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ErrorDetail": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"properties": {
							"details": {},
							"message": {
								"type": "string"
							},
							"code": {
								"type": "string"
							}
						},
						"required": [
							"message"
						],
						"type": "object"
					}
				],
				"description": "ErrorDetail - flexible error payload used across controllers/services.\n- a simple string\n- or a structured object { code, message, details? }\n\nExported here so TSOA only sees one model definition."
			},
			"ErrorResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"error": {
						"$ref": "#/components/schemas/ErrorDetail"
					},
					"timestamp": {
						"type": "string"
					},
					"developer": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISendOtpInput": {
				"description": "Send OTP request input",
				"properties": {
					"phone": {
						"type": "string"
					}
				},
				"required": [
					"phone"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthTokens": {
				"description": "Authentication tokens returned after successful authentication",
				"properties": {
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					},
					"expiresIn": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"accessToken",
					"refreshToken",
					"expiresIn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAuthResponse": {
				"description": "Mobile authentication response",
				"properties": {
					"user": {
						"properties": {
							"updatedAt": {
								"type": "string"
							},
							"createdAt": {
								"type": "string"
							},
							"isNewUser": {
								"type": "boolean"
							},
							"isPhoneVerified": {
								"type": "boolean"
							},
							"email": {
								"type": "string"
							},
							"phone": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"updatedAt",
							"createdAt",
							"isNewUser",
							"isPhoneVerified",
							"phone",
							"name",
							"id"
						],
						"type": "object"
					},
					"tokens": {
						"$ref": "#/components/schemas/AuthTokens"
					}
				},
				"required": [
					"user",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerifyOtpInput": {
				"description": "Verify OTP request input",
				"properties": {
					"phone": {
						"type": "string"
					},
					"otp": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"deviceId": {
						"type": "string"
					}
				},
				"required": [
					"phone",
					"otp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MobileCategoryResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"properties": {
							"pagination": {
								"properties": {
									"hasMore": {
										"type": "boolean"
									},
									"page": {
										"type": "number",
										"format": "double"
									},
									"pages": {
										"type": "number",
										"format": "double"
									},
									"total": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"hasMore",
									"page",
									"pages",
									"total"
								],
								"type": "object"
							},
							"categories": {
								"items": {
									"properties": {
										"deepLink": {
											"type": "string",
											"nullable": true
										},
										"textColor": {
											"type": "string"
										},
										"backgroundColor": {
											"type": "string"
										},
										"slug": {
											"type": "string"
										},
										"icon": {
											"type": "string",
											"nullable": true
										},
										"image": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"deepLink",
										"textColor",
										"backgroundColor",
										"slug",
										"icon",
										"image",
										"name",
										"id"
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"pagination",
							"categories"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryTreeResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"properties": {
							"categoryTree": {
								"items": {
									"properties": {
										"children": {
											"items": {},
											"type": "array"
										},
										"slug": {
											"type": "string"
										},
										"icon": {
											"type": "string",
											"nullable": true
										},
										"image": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"children",
										"slug",
										"icon",
										"image",
										"name",
										"id"
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"categoryTree"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeaturedCategoriesResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"properties": {
							"featuredCategories": {
								"items": {
									"properties": {
										"textColor": {
											"type": "string"
										},
										"backgroundColor": {
											"type": "string"
										},
										"deepLink": {
											"type": "string"
										},
										"image": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"textColor",
										"backgroundColor",
										"deepLink",
										"image",
										"name",
										"id"
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"featuredCategories"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductResponseDTO": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"slug": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"isActive": {
						"type": "boolean"
					},
					"inStock": {
						"type": "boolean"
					},
					"user": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"slug",
					"price",
					"images",
					"isActive",
					"inStock",
					"user",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_ProductResponseDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/ProductResponseDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_CreateProductDTO_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"compareAtPrice": {
						"type": "number",
						"format": "double"
					},
					"categoryId": {
						"type": "string"
					},
					"sku": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					},
					"brand": {
						"type": "string"
					},
					"unit": {
						"type": "string",
						"enum": [
							"piece",
							"kg",
							"gm",
							"litre",
							"ml",
							"pack",
							"dozen"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UpdateProductDTO": {
				"$ref": "#/components/schemas/Partial_CreateProductDTO_"
			},
			"PaginatedProductsResponseDTO": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/ProductResponseDTO"
						},
						"type": "array"
					},
					"pagination": {
						"properties": {
							"hasPrevPage": {
								"type": "boolean"
							},
							"hasNextPage": {
								"type": "boolean"
							},
							"limit": {
								"type": "number",
								"format": "double"
							},
							"currentPage": {
								"type": "number",
								"format": "double"
							},
							"totalPages": {
								"type": "number",
								"format": "double"
							},
							"totalDocs": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"hasPrevPage",
							"hasNextPage",
							"limit",
							"currentPage",
							"totalPages",
							"totalDocs"
						],
						"type": "object"
					}
				},
				"required": [
					"products",
					"pagination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_PaginatedProductsResponseDTO_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"$ref": "#/components/schemas/PaginatedProductsResponseDTO"
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SuccessResponse_null_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"result": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					}
				},
				"required": [
					"success",
					"message",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NullSuccessResponse": {
				"$ref": "#/components/schemas/SuccessResponse_null_"
			},
			"Record_string.any_": {
				"properties": {},
				"additionalProperties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"CategoryResponse": {
				"description": "Response interfaces for TSOA documentation",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"category": {
								"$ref": "#/components/schemas/Record_string.any_"
							}
						},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"success"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginatedCategoryResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"data": {
						"properties": {
							"pagination": {
								"properties": {
									"nextPage": {
										"type": "number",
										"format": "double",
										"nullable": true
									},
									"prevPage": {
										"type": "number",
										"format": "double",
										"nullable": true
									},
									"hasNextPage": {
										"type": "boolean"
									},
									"hasPrevPage": {
										"type": "boolean"
									},
									"limit": {
										"type": "number",
										"format": "double"
									},
									"page": {
										"type": "number",
										"format": "double"
									},
									"pages": {
										"type": "number",
										"format": "double"
									},
									"total": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"nextPage",
									"prevPage",
									"hasNextPage",
									"hasPrevPage",
									"limit",
									"page",
									"pages",
									"total"
								],
								"type": "object"
							},
							"categories": {
								"items": {
									"$ref": "#/components/schemas/Record_string.any_"
								},
								"type": "array"
							}
						},
						"required": [
							"pagination",
							"categories"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReorderResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"results": {
								"items": {
									"properties": {
										"success": {
											"type": "boolean"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"success",
										"id"
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"results"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CategoryReorderRequest": {
				"properties": {
					"categories": {
						"items": {
							"properties": {
								"displayOrder": {
									"type": "number",
									"format": "double"
								},
								"id": {
									"type": "string"
								}
							},
							"required": [
								"displayOrder",
								"id"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"categories"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "milqit-ecom-backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/mobile/auth/send-otp": {
			"post": {
				"operationId": "SendOtp",
				"responses": {
					"200": {
						"description": "OTP Sent",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"expiresIn": {
											"type": "number",
											"format": "double"
										},
										"isNewUser": {
											"type": "boolean"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"expiresIn",
										"isNewUser",
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Initiates the login/registration flow by sending an OTP to the user's phone.\nThe client should use the response to determine if they need to ask for the user's name.",
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISendOtpInput"
							}
						}
					}
				}
			}
		},
		"/mobile/auth/verify-otp": {
			"post": {
				"operationId": "VerifyOtp",
				"responses": {
					"201": {
						"description": "Authentication Successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IAuthResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Invalid or Expired OTP",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Verifies an OTP to complete login or registration.\nIf the user is new, the `name` field is required.",
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The request body containing phone, OTP, and optional name.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerifyOtpInput",
								"description": "The request body containing phone, OTP, and optional name."
							}
						}
					}
				}
			}
		},
		"/mobile/auth/resend-otp": {
			"post": {
				"operationId": "ResendOtp",
				"responses": {
					"200": {
						"description": "OTP Resent",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"expiresIn": {
											"type": "number",
											"format": "double"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"expiresIn",
										"message"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"429": {
						"description": "Too Many Requests",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Resends an OTP to the user's phone number.\nCan be used if the original OTP expires or wasn't received.",
				"tags": [
					"Mobile Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISendOtpInput"
							}
						}
					}
				}
			}
		},
		"/mobile/categories": {
			"get": {
				"operationId": "ListCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MobileCategoryResponse"
								}
							}
						}
					}
				},
				"description": "Get all active categories for mobile app",
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/mobile/categories/tree": {
			"get": {
				"operationId": "GetCategoryTree",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryTreeResponse"
								}
							}
						}
					}
				},
				"description": "Get home screen categories with featured products",
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": []
			}
		},
		"/mobile/categories/featured": {
			"get": {
				"operationId": "GetFeaturedCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FeaturedCategoriesResponse"
								}
							}
						}
					}
				},
				"description": "Get featured categories for mobile app",
				"tags": [
					"Mobile - Categories"
				],
				"security": [],
				"parameters": []
			}
		},
		"/admin/products": {
			"post": {
				"operationId": "CreateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Create a new product with file uploads.\nNote: When uploading files, data must be sent as form fields.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"price": {
										"type": "string"
									},
									"categoryId": {
										"type": "string"
									},
									"sku": {
										"type": "string"
									},
									"quantity": {
										"type": "string"
									},
									"unit": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"brand": {
										"type": "string"
									},
									"isActive": {
										"type": "string"
									},
									"images": {
										"items": {
											"type": "string",
											"format": "binary"
										},
										"type": "array"
									}
								},
								"required": [
									"name",
									"price",
									"categoryId",
									"sku",
									"quantity",
									"unit"
								]
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_PaginatedProductsResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get a paginated list of products.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/admin/products/{id}": {
			"put": {
				"operationId": "UpdateProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateProductDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetProductById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessResponse_ProductResponseDTO_"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get a single product by its ID.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteProduct",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NullSuccessResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Delete a product by its ID.",
				"summary": "Authored by MarotiKathoke at 2025-09-01 10:32:19",
				"tags": [
					"ADMIN: Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories": {
			"post": {
				"operationId": "CreateCategory",
				"responses": {
					"201": {
						"description": "Category created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Create a new product category\nNote: This endpoint processes multipart/form-data with files",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": []
			},
			"get": {
				"operationId": "ListCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedCategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get all categories with pagination and filtering",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"asc",
								"desc"
							]
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories/{id}": {
			"get": {
				"operationId": "GetCategoryById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get category by ID",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Update an existing category\nNote: This endpoint processes multipart/form-data with files",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Delete a category",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/categories/tree": {
			"get": {
				"operationId": "GetCategoryTree",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CategoryResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get category tree hierarchy",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": []
			}
		},
		"/admin/categories/reorder": {
			"put": {
				"operationId": "ReorderCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ReorderResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Reorder categories by updating display order",
				"tags": [
					"Admin - Categories"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryReorderRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3000/v1"
		}
	]
}